{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrov/WebstormProjects/users/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './styles/App.scss';\nimport { getUsers } from \"./api/requestData\";\nimport { UsersList } from \"./components/usersList/UsersList\";\nexport const App = () => {\n  const [usersData, setUsersData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      setUsersData(await getUsers());\n    };\n\n    fetchData();\n  }, []);\n\n  if (usersData && usersData.length) {\n    return /*#__PURE__*/React.createElement(UsersList, {\n      usersData: usersData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, \"Data is empty\");\n  }\n};","map":{"version":3,"sources":["/Users/aleksandrov/WebstormProjects/users/src/App.js"],"names":["React","useEffect","useState","getUsers","UsersList","App","usersData","setUsersData","fetchData","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,mBAAP;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AACA,SAAQC,SAAR,QAAwB,kCAAxB;AAGA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAErB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACb,UAAMO,SAAS,GAAG,YAAY;AAC1BD,MAAAA,YAAY,CAAC,MAAMJ,QAAQ,EAAf,CAAZ;AACH,KAFD;;AAGAK,IAAAA,SAAS;AACZ,GALQ,EAKN,EALM,CAAT;;AAOA,MAAIF,SAAS,IAAIA,SAAS,CAACG,MAA3B,EAAmC;AAC/B,wBACQ,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEH,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AAGH,GAJD,MAIO;AACH,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ;AAGH;AACJ,CApBM","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './styles/App.scss';\nimport {getUsers} from \"./api/requestData\";\nimport {UsersList} from \"./components/usersList/UsersList\";\n\n\nexport const App = () => {\n\n    const [usersData, setUsersData] = useState([])\n\n    useEffect( () => {\n        const fetchData = async () => {\n            setUsersData(await getUsers())\n        }\n        fetchData()\n    }, [])\n\n    if (usersData && usersData.length) {\n        return (\n                <UsersList usersData={usersData} />\n        )\n    } else {\n        return (\n            <h1>Data is empty</h1>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}